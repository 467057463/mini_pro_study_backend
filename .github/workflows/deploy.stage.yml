name: MINI_PRO_BACKEND CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - stage

jobs:
  create-deployment-artifacts:
    runs-on: ubuntu-latest
    steps:
      # 拉取项目代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 给当前环境下载 node
      - name: Build App Artifacts
        env:
          GITHUB_SHA: ${{ github.sha }} 
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: |
          touch .env
          echo NUXT_JWT_SECERT=${{secrets.JWT_SECERT}} >> .env
          echo NUXT_SESSION_PASSWORD=${{secrets.SESSION_PASSWORD}} >> .env
          echo DATABASE_URL=${{secrets.STAGE_DATABASE_URL}} >> .env
          echo NUXT_WX_APP_ID=${{secrets.WX_APP_ID}} >> .env
          echo NUXT_WX_APP_SECRET=${{secrets.WX_APP_SECRET}} >> .env

          npm install
          npm run build
          cp .env .output/server/.env
          cp -r prisma .output/server
          tar -czf "${GITHUB_SHA}".tar.gz .output ./ecosystem.stage.config.cjs
          
      - name: Store app-artifacts for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    needs: create-deployment-artifacts
    name: "Prepare release on INT server"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-artifacts
      - name: Upload app-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          port: "22"
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: ${{ github.sha }}.tar.gz
          target: /var/www/mini_pro_study_backend_stage/artifacts

  activate-release:
    name: "Activate release"
    runs-on: ubuntu-latest
    needs: prepare-release-on-servers
    steps:
      - name: Activate Release
        uses: appleboy/ssh-action@master
        env:
          RELEASE_PATH: /var/www/mini_pro_study_backend_stage/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: /var/www/mini_pro_study_backend_stage/live
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: "22"
          envs: RELEASE_PATH,ACTIVE_RELEASE_PATH
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            npm --help
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            cd $ACTIVE_RELEASE_PATH/.output/server && npx prisma migrate deploy && npx tsx prisma/seed.ts 
            cd $ACTIVE_RELEASE_PATH
            pm2 del ./ecosystem.stage.config.cjs
            pm2 start ./ecosystem.stage.config.cjs

  clean-up:
    name: "Clean up old versions"
    runs-on: ubuntu-latest
    needs: activate-release
    steps:
      - name: clean up old releases
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: "22"
          script: |
            cd /var/www/mini_pro_study_backend_stage/releases && ls -t -1 | tail -n +4 | xargs rm -rf
            cd /var/www/mini_pro_study_backend_stage/artifacts && rm -rf *
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: app-artifacts